HLSDK = /home/fabian/sdks_new/hl1sdk
MM = /home/fabian/sdks_new/mm/metamod
MMSOURCE = /home/fabian/sdks_new/mm_source/core

OPT_FLAGS = -O2 -funroll-loops -pipe
GCC4_FLAGS = -fvisibility=hidden -fvisibility-inlines-hidden -fno-strict-aliasing -fno-stack-protector -msse2 -m32
#CC = gcc-4.1
CC = gcc
BINDIR_MM = hl1_mm
BINDIR_STANDALONE = hl1_standalone
BINDIR = $(BINDIR_MM)
BINARY = sbguardian.so

OBJECTS = \
	HL1/CRayTrace.cpp \
	HL1/Engine.cpp \
	HL1/hl1.cpp \
	HL1/Player.cpp \
	HL1/PlayerManager.cpp \
	HL1/ServerPlugin.cpp \
	HL1/SrcHooks.cpp

ifeq "$(STANDALONE)" "true"
	OBJECTS += HL1/linkent.cpp
	BINDIR = $(BINDIR_STANDALONE)
	CFLAGS += -DSTANDALONE
endif

OBJECTS += \
	CommandCallback.cpp \
	CStr.cpp \
	CVector.cpp \
	DLL.cpp \
	externs.cpp \
	File.cpp \
	SBGuardian.cpp \
	Socket.cpp \
	Thread.cpp \
	Time.cpp \
	Vector.cpp \
	SteamId.cpp \
	modules/AntiAimbot/AntiAimbot.cpp \
	modules/AntiFlashhack/AntiFlashhack.cpp \
	modules/AntiWallhack/AntiWallhack.cpp \
	modules/CvarCheck/CvarCheck.cpp \
	modules/FOVCheck/FOVCheck.cpp \
	modules/UpdateSystem/UpdateSystem.cpp \
	modules/Warmodus/Warmodus.cpp \
	sourcehook.cpp \
	sourcehook_impl_chookidman.cpp \
	sourcehook_impl_chookmaninfo.cpp \
	sourcehook_impl_cproto.cpp \
	sourcehook_impl_cvfnptr.cpp
	
	
ifeq "$(DEBUG)" "true"
	CFLAGS += -g3 -D_PROFILE_
	LINK += -g3
endif

ifeq "$(PROFILE)" "true"
	#CFLAGS += -pg
	#LINK += -pg
	CFLAGS += -D_PROFILE_
endif

GCC_VERSION := $(shell $(CC) -dumpversion >&1 | cut -b1)
CFLAGS += -D_LINUX -DNDEBUG -D_snprintf=snprintf -D_vsnprintf=vsnprintf \
        -Wall -Wno-unknown-pragmas -Wno-non-virtual-dtor -fPIC -fno-exceptions -fno-rtti -static-libgcc \
	$(OPT_FLAGS)
ifeq "$(GCC_VERSION)" "4"
        CFLAGS += $(GCC4_FLAGS)
endif

INCLUDE = \
	-I. \
	-I$(HLSDK) \
	-I$(HLSDK)/engine \
	-I$(HLSDK)/dlls \
	-I$(HLSDK)/common \
	-I$(HLSDK)/public \
	-I$(MM) \
	-I$(MMSOURCE)/sourcehook

LINK += -m32 -lm -ldl -fPIC -fno-exceptions -fno-rtti -static-libgcc -Wno-non-virtual-dtor -shared #$(shell $(CC) -print-file-name=libstdc++.a)

####################################################################################################### 
OBJ_LINUX := $(OBJECTS:%.cpp=$(BINDIR)/%.o)

$(BINDIR)/%.o: %.cpp
	@mkdir -p $(shell dirname $@) 2> /dev/null
	@echo "Compiling $<..."
	@$(CC) $(INCLUDE) $(CFLAGS) -o $@ -c $<
#######################################################################################################
default: $(BINDIR)/$(BINARY)
$(BINDIR)/$(BINARY): $(OBJ_LINUX)
	@echo "Linking $@..."
	@$(CC) $(INCLUDE) $(OBJ_LINUX) $(LINK) -o $(BINDIR)/$(BINARY)
clean:
	@rm -f $(BINDIR)/$(BINARY) $(OBJ_LINUX)

.PHONY: clean default
